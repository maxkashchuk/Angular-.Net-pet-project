{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, Input, NgModule } from '@angular/core';\nimport * as i1 from '@alyle/ui';\nimport { LyCommonModule } from '@alyle/ui';\nconst MEDIA_PRIORITY = 999;\nconst styles = {\n  hide: {\n    display: 'none'\n  }\n};\n/**\n * @deprecated use `[lyDisplay]` instead.\n */\n\nlet MediaDirective = /*#__PURE__*/(() => {\n  class MediaDirective {\n    constructor(_renderer, _elementRef, theme) {\n      this._renderer = _renderer;\n      this._elementRef = _elementRef;\n      this.theme = theme;\n      /**\n       * Styles\n       * @ignore\n       */\n\n      this.classes = this.theme.addStyleSheet(styles);\n    }\n    /**\n     * Shows the item when the value is resolved as true\n     */\n\n\n    get lyShow() {\n      return this._show;\n    }\n\n    set lyShow(val) {\n      this._show = val;\n      this._showClass = this.theme.addStyle(`lyMedia-show:${val}`, theme => ({\n        [theme.getBreakpoint(val)]: {\n          display: 'block'\n        }\n      }), this._elementRef.nativeElement, this._showClass, MEDIA_PRIORITY);\n    }\n    /**\n     * Hides the item when the value is resolved as true\n     */\n\n\n    set lyHide(val) {\n      this._hide = val;\n      this._hideClass = this.theme.addStyle(`lyMedia-hide:${val}`, theme => ({\n        [theme.getBreakpoint(val)]: {\n          display: 'none'\n        }\n      }), this._elementRef.nativeElement, this._hideClass, MEDIA_PRIORITY);\n    }\n\n    get lyHide() {\n      return this._hide;\n    }\n\n    ngOnInit() {\n      if (!this.lyHide) {\n        this._renderer.addClass(this._elementRef.nativeElement, this.classes.hide);\n      }\n    }\n\n    ngOnChanges() {\n      if (this.lyHide && this.lyShow) {\n        throw new Error(`use only \\`lyHide\\` or \\`lyShow\\` per element`);\n      }\n    }\n\n  }\n\n  MediaDirective.ɵfac = function MediaDirective_Factory(t) {\n    return new (t || MediaDirective)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.LyTheme2));\n  };\n\n  MediaDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MediaDirective,\n    selectors: [[\"\", \"lyShow\", \"\"], [\"\", \"lyHide\", \"\"]],\n    inputs: {\n      lyShow: \"lyShow\",\n      lyHide: \"lyHide\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n  return MediaDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @deprecated use instead `[lyDisplay]` or `[lyStyle]`\n */\n\n\nlet ResponsiveModule = /*#__PURE__*/(() => {\n  class ResponsiveModule {}\n\n  ResponsiveModule.ɵfac = function ResponsiveModule_Factory(t) {\n    return new (t || ResponsiveModule)();\n  };\n\n  ResponsiveModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ResponsiveModule\n  });\n  ResponsiveModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [LyCommonModule]\n  });\n  return ResponsiveModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst Breakpoints = {\n  XSmall: '(max-width: 599px)',\n  Small: '(min-width: 600px) and (max-width: 959px)',\n  Medium: '(min-width: 960px) and (max-width: 1279px)',\n  Large: '(min-width: 1280px) and (max-width: 1919px)',\n  XLarge: '(min-width: 1920px)',\n  Handset: '(max-width: 599px) and (orientation: portrait), ' + '(max-width: 959px) and (orientation: landscape)',\n  Tablet: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait), ' + '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n  Web: '(min-width: 840px) and (orientation: portrait), ' + '(min-width: 1280px) and (orientation: landscape)',\n  HandsetPortrait: '(max-width: 599px) and (orientation: portrait)',\n  TabletPortrait: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait)',\n  WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n  HandsetLandscape: '(max-width: 959px) and (orientation: landscape)',\n  TabletLandscape: '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n  WebLandscape: '(min-width: 1280px) and (orientation: landscape)'\n};\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Breakpoints, MediaDirective, ResponsiveModule }; //# sourceMappingURL=alyle-ui-responsive.mjs.map","map":null,"metadata":{},"sourceType":"module"}