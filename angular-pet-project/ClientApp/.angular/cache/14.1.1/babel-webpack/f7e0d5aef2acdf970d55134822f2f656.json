{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Component } from '@angular/core';\nimport { FeatureService } from '../app.feature.service';\nimport { AuthService } from '../app.authentication.service';\nimport { Router } from '@angular/router';\nlet NavMenuComponent = class NavMenuComponent {\n  constructor(featureService, router, authService) {\n    this.featureService = featureService;\n    this.router = router;\n    this.authService = authService;\n    this.avatar = this.authService.getDecodedAccessToken(localStorage.getItem('token'));\n    this.showState = [\"none\", \"flex\"];\n  }\n\n  logOut() {\n    sessionStorage.removeItem(\"isLogged\");\n  }\n\n};\nNavMenuComponent = __decorate([Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n}), __metadata(\"design:paramtypes\", [FeatureService, Router, AuthService])], NavMenuComponent);\nexport { NavMenuComponent };","map":null,"metadata":{},"sourceType":"module"}