{"ast":null,"code":"import { lyl, StyleRenderer, ThemeVariables, ThemeRef } from '@alyle/ui';\nimport { STYLES as CROPPER_STYLES, LyImageCropper } from '@alyle/ui/image-cropper';\nimport { Platform } from '@angular/cdk/platform';\nimport { LyDialogRef, LY_DIALOG_DATA } from '@alyle/ui/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@alyle/ui\";\nimport * as i2 from \"@angular/cdk/platform\";\nimport * as i3 from \"@alyle/ui/dialog\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@alyle/ui/button\";\nimport * as i7 from \"@alyle/ui/image-cropper\";\nimport * as i8 from \"@alyle/ui/slider\";\nimport * as i9 from \"@alyle/ui/icon\";\n\nfunction CropCircleComponent_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵtext(1, \"Upload\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CropCircleComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵelementStart(2, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function CropCircleComponent_div_13_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.cropper.zoomIn());\n    });\n    i0.ɵɵelementStart(3, \"ly-icon\");\n    i0.ɵɵtext(4, \"zoom_in\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(5, \"\\n    \");\n    i0.ɵɵelementStart(6, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function CropCircleComponent_div_13_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.cropper.zoomOut());\n    });\n    i0.ɵɵelementStart(7, \"ly-icon\");\n    i0.ɵɵtext(8, \"zoom_out\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(9, \"\\n    \");\n    i0.ɵɵelementStart(10, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function CropCircleComponent_div_13_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.cropper.center());\n    });\n    i0.ɵɵelementStart(11, \"ly-icon\");\n    i0.ɵɵtext(12, \"filter_center_focus\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(13, \"\\n    \");\n    i0.ɵɵelementStart(14, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function CropCircleComponent_div_13_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.cropper.rotate(-90));\n    });\n    i0.ɵɵelementStart(15, \"ly-icon\");\n    i0.ɵɵtext(16, \"rotate_90_degrees_ccw\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(17, \"\\n    \");\n    i0.ɵɵelementStart(18, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function CropCircleComponent_div_13_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.cropper.fit());\n    });\n    i0.ɵɵtext(19, \"Fit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n    \");\n    i0.ɵɵelementStart(21, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function CropCircleComponent_div_13_Template_button_click_21_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.cropper.fitToScreen());\n    });\n    i0.ɵɵtext(22, \"Fit to screen\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(23, \"\\n    \");\n    i0.ɵɵelementStart(24, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function CropCircleComponent_div_13_Template_button_click_24_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.cropper.setScale(1));\n    });\n    i0.ɵɵtext(25, \"1:1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(26, \"\\n    \");\n    i0.ɵɵtext(27, \"\\n  \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CropCircleComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵelementStart(2, \"ly-slider\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function CropCircleComponent_div_21_Template_ly_slider_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.scale = $event);\n    })(\"input\", function CropCircleComponent_div_21_Template_ly_slider_input_2_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onSliderInput($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n  \");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"className\", ctx_r3.classes.sliderContainer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"color\", \"primary\")(\"thumbVisible\", false)(\"min\", ctx_r3.minScale)(\"max\", 1)(\"ngModel\", ctx_r3.scale);\n  }\n}\n\nconst STYLES = (_theme, ref) => {\n  ref.renderStyleSheet(CROPPER_STYLES);\n  const cropper = ref.selectorsOf(CROPPER_STYLES);\n  return {\n    root: lyl`{\n      ${cropper.root} {\n        max-width: 400px\n        height: 300px\n      }\n    }`,\n    sliderContainer: lyl`{\n      text-align: center\n      max-width: 100%\n      margin: 14px\n    }`,\n    slider: lyl`{\n      width: 10px\n    }`,\n    cropResult: lyl`{\n      border-radius: 50%\n    }`\n  };\n};\n\nexport let CropCircleComponent = /*#__PURE__*/(() => {\n  class CropCircleComponent {\n    constructor(sRenderer, _platform, dialogRef, data) {\n      this.sRenderer = sRenderer;\n      this._platform = _platform;\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.classes = this.sRenderer.renderSheet(STYLES, 'root');\n      this.myConfig = {\n        width: 150,\n        height: 150,\n        fill: '#ff2997',\n        type: 'image/png',\n        round: true\n      };\n    }\n\n    ngAfterViewInit() {\n      // demo: Load image from URL and update position, scale, rotate\n      // this is supported only for browsers\n      if (this._platform.isBrowser) {\n        const config = {\n          scale: 0.745864772531767,\n          xOrigin: 642.380608078103,\n          yOrigin: 236.26357452128866,\n          // rotation: 90,\n          originalDataURL: this.data.image\n        };\n        this.cropper.loadImage(config);\n      }\n    }\n\n    onCropped(e) {\n      this.croppedImage = e.dataURL;\n      console.log('cropped img: ', e);\n    }\n\n    onLoaded(e) {\n      console.log('img loaded', e);\n    }\n\n    onError(e) {\n      console.warn(`'${e.name}' is not a valid image`, e);\n    }\n\n    onSliderInput(event) {\n      this.scale = event.value;\n    }\n\n  }\n\n  CropCircleComponent.ɵfac = function CropCircleComponent_Factory(t) {\n    return new (t || CropCircleComponent)(i0.ɵɵdirectiveInject(i1.StyleRenderer), i0.ɵɵdirectiveInject(i2.Platform), i0.ɵɵdirectiveInject(i3.LyDialogRef), i0.ɵɵdirectiveInject(LY_DIALOG_DATA));\n  };\n\n  CropCircleComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CropCircleComponent,\n    selectors: [[\"aui-crop-circle\"]],\n    viewQuery: function CropCircleComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(LyImageCropper, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cropper = _t.first);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([StyleRenderer])],\n    decls: 25,\n    vars: 7,\n    consts: [[2, \"margin-left\", \"6%\"], [3, \"lyDisplay\"], [3, \"lyFlex\"], [\"type\", \"file\", \"accept\", \"image/*\", \"hidden\", \"\", 3, \"change\"], [\"_fileInput\", \"\"], [\"raised\", \"\", \"ly-button\", \"\", \"bg\", \"accent\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"config\", \"scale\", \"scaleChange\", \"minScale\", \"ready\", \"cleaned\", \"cropped\", \"loaded\", \"error\"], [3, \"className\", 4, \"ngIf\"], [\"raised\", \"\", \"ly-button\", \"\", \"bg\", \"accent\"], [\"ly-button\", \"\", \"appearance\", \"icon\", 1, \"btnFunc\", 3, \"click\"], [\"ly-button\", \"\", 1, \"btnFunc\", \"btnFix\", 3, \"click\"], [3, \"className\"], [\"step\", \"0.000001\", 3, \"color\", \"thumbVisible\", \"min\", \"max\", \"ngModel\", \"ngModelChange\", \"input\"]],\n    template: function CropCircleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtext(1, \"\\n\");\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵtext(3, \"\\n    \");\n        i0.ɵɵtext(4, \"\\n    \");\n        i0.ɵɵelement(5, \"span\", 2);\n        i0.ɵɵtext(6, \"\\n    \");\n        i0.ɵɵelementStart(7, \"input\", 3, 4);\n        i0.ɵɵlistener(\"change\", function CropCircleComponent_Template_input_change_7_listener($event) {\n          return ctx.cropper.selectInputEvent($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(9, \"\\n    \");\n        i0.ɵɵtemplate(10, CropCircleComponent_button_10_Template, 2, 0, \"button\", 5);\n        i0.ɵɵtext(11, \"\\n  \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(12, \"\\n  \\n  \");\n        i0.ɵɵtemplate(13, CropCircleComponent_div_13_Template, 28, 0, \"div\", 6);\n        i0.ɵɵtext(14, \"\\n  \\n  \");\n        i0.ɵɵelementStart(15, \"ly-img-cropper\", 7);\n        i0.ɵɵlistener(\"scaleChange\", function CropCircleComponent_Template_ly_img_cropper_scaleChange_15_listener($event) {\n          return ctx.scale = $event;\n        })(\"minScale\", function CropCircleComponent_Template_ly_img_cropper_minScale_15_listener($event) {\n          return ctx.minScale = $event;\n        })(\"ready\", function CropCircleComponent_Template_ly_img_cropper_ready_15_listener() {\n          return ctx.ready = true;\n        })(\"cleaned\", function CropCircleComponent_Template_ly_img_cropper_cleaned_15_listener() {\n          return ctx.ready = false;\n        })(\"cropped\", function CropCircleComponent_Template_ly_img_cropper_cropped_15_listener($event) {\n          return ctx.onCropped($event);\n        })(\"loaded\", function CropCircleComponent_Template_ly_img_cropper_loaded_15_listener($event) {\n          return ctx.onLoaded($event);\n        })(\"error\", function CropCircleComponent_Template_ly_img_cropper_error_15_listener($event) {\n          return ctx.onError($event);\n        });\n        i0.ɵɵtext(16, \"\\n    \");\n        i0.ɵɵelementStart(17, \"span\");\n        i0.ɵɵtext(18, \"Drag and drop image\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(19, \"\\n  \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(20, \"\\n  \\n  \");\n        i0.ɵɵtemplate(21, CropCircleComponent_div_21_Template, 4, 6, \"div\", 8);\n        i0.ɵɵtext(22, \"\\n  \\n  \");\n        i0.ɵɵtext(23, \"\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(24, \"\\n\\n    \");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"lyDisplay\", \"flex\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"lyFlex\", 1);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.croppedImage);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.ready);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"config\", ctx.myConfig)(\"scale\", ctx.scale);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.ready);\n      }\n    },\n    dependencies: [i4.NgIf, i5.NgControlStatus, i5.NgModel, i1.LyStyle, i6.LyButton, i7.LyImageCropper, i8.LySlider, i9.LyIcon],\n    styles: [\".btnFunc[_ngcontent-%COMP%]{color:#fff;margin-top:2%;margin-bottom:2%}\"],\n    changeDetection: 0\n  });\n  return CropCircleComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}